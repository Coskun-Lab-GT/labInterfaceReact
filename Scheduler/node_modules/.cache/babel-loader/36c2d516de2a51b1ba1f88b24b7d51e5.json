{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/React/Scheduler/src/App.tsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, Day, Week, Month, Agenda } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteData = new DataManager({\n      url: 'https://js.syncfusion.com/demos/ejservices/api/Schedule/LoadData',\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n    this.state = {\n      Title: \"\",\n      Location: \"\",\n      Description: \"\",\n      Start: \"\",\n      End: \"\"\n    };\n  }\n\n  action() {\n    document.getElementsByClassName(\"Edie-schedule-table e-content-tabletForm\")[0].onclick = () => console.log(\"hello\"); // let btn: HTMLElement = document.getElementsByClassName(\"e-control e-btn e-lib e-primary e-event-save e-flat\")[0] as HTMLElement;\n    // console.log(\"hello\");\n    //  if(btn){\n    //    btn.onclick=() =>{return (this.postEvent)};\n    // }\n\n  }\n\n  componentDidMount() {}\n\n  postEvent() {\n    console.log(this.state);\n    const link = 'http://127.0.0.1:8000/calendar/api/event/';\n    let data = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"summary\": document.getElementById(\"Subject\").value,\n        \"location\": document.getElementById(\"Location\").value,\n        \"description\": document.getElementById(\"Description\").value,\n        \"start\": document.getElementById(\"StartTime\").value,\n        \"end\": document.getElementById(\"EndTime\").value\n      })\n    };\n    fetch(link, data).then(response => response.json()) // promise\n    .then(response => {\n      this.setState({\n        event: response\n      });\n      console.log(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/josh/Desktop/React/Scheduler/src/App.tsx"],"names":["React","Component","Inject","ScheduleComponent","Day","Week","Month","Agenda","DataManager","WebApiAdaptor","App","constructor","props","remoteData","url","adaptor","crossDomain","state","Title","Location","Description","Start","End","action","document","getElementsByClassName","onclick","console","log","componentDidMount","postEvent","link","data","method","headers","body","JSON","stringify","getElementById","value","fetch","then","response","json","setState","event","render"],"mappings":";AAEA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,iBAAhB,EAAmCC,GAAnC,EAAuCC,IAAvC,EAA4CC,KAA5C,EAAkDC,MAAlD,QAA+D,gCAA/D;AACA,SAAQC,WAAR,EAAoBC,aAApB,QAAwC,sBAAxC;AAKA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AACxCU,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AADqB,SAoFfC,UApFe,GAoFF,IAAIL,WAAJ,CAAgB;AACnCM,MAAAA,GAAG,EAAC,kEAD+B;AAEnCC,MAAAA,OAAO,EAAE,IAAIN,aAAJ,EAF0B;AAGnCO,MAAAA,WAAW,EAAE;AAHsB,KAAhB,CApFE;AAErB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,QAAQ,EAAC,EAFE;AAGXC,MAAAA,WAAW,EAAC,EAHD;AAIXC,MAAAA,KAAK,EAAC,EAJK;AAKXC,MAAAA,GAAG,EAAC;AALO,KAAb;AAQD;;AAEHC,EAAAA,MAAM,GAAE;AACLC,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,0CAAhC,EAA4E,CAA5E,CAAD,CAAgGC,OAAhG,GAAwG,MAAKC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAA7G,CADM,CAGR;AACA;AACA;AACA;AAEA;;AAEC;;AAGGC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEHC,EAAAA,SAAS,GAAG;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,UAAMc,IAAI,GAAG,2CAAb;AACA,QAAIC,IAAI,GAAG;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFF;AAMbC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AACd,mBAAYb,QAAQ,CAACc,cAAT,CAAwB,SAAxB,CAAD,CAAyDC,KADtD;AAEZ,oBAAaf,QAAQ,CAACc,cAAT,CAAwB,UAAxB,CAAD,CAAyDC,KAFzD;AAGX,uBAAgBf,QAAQ,CAACc,cAAT,CAAwB,aAAxB,CAAD,CAA6DC,KAHjE;AAIZ,iBAASf,QAAQ,CAACc,cAAT,CAAwB,WAAxB,CAAD,CAA0DC,KAJtD;AAKZ,eAAOf,QAAQ,CAACc,cAAT,CAAwB,SAAxB,CAAD,CAAwDC;AALlD,OAAf;AANQ,KAAX;AAsBAC,IAAAA,KAAK,CAACT,IAAD,EAAOC,IAAP,CAAL,CACCS,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACoC;AADpC,KAECF,IAFD,CAEMC,QAAQ,IAAI;AACd,WAAKE,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEH;AAAR,OAAd;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AAEH,KAND;AAUD;;AAgCMI,EAAAA,MAAP,GAAgB;AAEd,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC1C,GAAD,EAAMC,IAAN,EAAWC,KAAX,EAAiBC,MAAjB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAMD;;AAzGuC","sourcesContent":["\n\nimport React,{Component} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, Day,Week,Month,Agenda} from '@syncfusion/ej2-react-schedule';\nimport {DataManager,WebApiAdaptor} from '@syncfusion/ej2-data'\nimport { Ajax } from '@syncfusion/ej2-base';\nimport * as ReactDOM from \"react-dom\";\nimport { start } from 'repl';\n\nexport default class App extends Component{\n  constructor(props:any) {\n    super(props);\n    this.state = {\n      Title:\"\",\n      Location:\"\",\n      Description:\"\",\n      Start:\"\",\n      End:\"\",\n    }\n    \n  }\n\naction(){\n  (document.getElementsByClassName(\"Edie-schedule-table e-content-tabletForm\")[0] as HTMLElement).onclick=()=>(console.log(\"hello\"));\n\n// let btn: HTMLElement = document.getElementsByClassName(\"e-control e-btn e-lib e-primary e-event-save e-flat\")[0] as HTMLElement;\n// console.log(\"hello\");\n//  if(btn){\n//    btn.onclick=() =>{return (this.postEvent)};\n   \n// }\n\n};\n\n\n    componentDidMount() {\n\n    }\n\n  postEvent() {\n    console.log(this.state)\n    const link = 'http://127.0.0.1:8000/calendar/api/event/';\n    let data = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        \n  body:JSON.stringify({\n        \"summary\": (document.getElementById(\"Subject\") as HTMLInputElement).value,\n          \"location\": (document.getElementById(\"Location\")as HTMLInputElement).value,\n           \"description\": (document.getElementById(\"Description\") as HTMLInputElement).value,\n          \"start\":(document.getElementById(\"StartTime\")as HTMLInputElement).value,\n          \"end\":(document.getElementById(\"EndTime\")as HTMLInputElement).value\n        })  \n      \n\n        \n          \n\n    \n\n    }\n    \n    fetch(link, data)\n    .then(response => response.json())  // promise\n    .then(response => {\n        this.setState({event: response});\n        console.log(response)\n\n    })\n\n    \n    \n  }\n\n\n\n\n  \n\n  \n\n\n\n \n  \n\n\n\n\n\n\n\n  private remoteData = new DataManager({\n    url:'https://js.syncfusion.com/demos/ejservices/api/Schedule/LoadData',\n    adaptor: new WebApiAdaptor,\n    crossDomain: true\n\n\n\n\n\n  });\n  \n\n  public render() {\n\n    return <ScheduleComponent currentView='Month'>\n      <Inject services={[Day, Week,Month,Agenda]}/> \n    </ScheduleComponent>\n    \n    \n    \n  }\n  \n}\n  \n\n"]},"metadata":{},"sourceType":"module"}