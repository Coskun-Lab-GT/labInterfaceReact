{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/React/Scheduler/src/App.tsx\";\n\n/*\nimport React,{Component, ButtonHTMLAttributes} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, Day,Week,Month,Agenda} from '@syncfusion/ej2-react-schedule';\nimport {DataManager,WebApiAdaptor} from '@syncfusion/ej2-data'\nimport { Ajax } from '@syncfusion/ej2-base';\nimport * as ReactDOM from \"react-dom\";\nimport { start } from 'repl';\nimport {ODataV4Adaptor, Query } from '@syncfusion/ej2-data';\n\n\nexport default class App extends Component{\n  \n  constructor(props:any) {\n    \n    super(props);\n    \n    this.state = {\n      Title:\"\",\n      Location:\"\",\n      Description:\"\",\n      Start:\"\",\n      End:\"\",\n    }\n  }\n\n\n  componentDidMount() {\n    this.postEvent();\n  }\n\n  postEvent() {\n  //var but= document.getElementsByClassName(\"e-control e-btn e-lib e-primary e-event-save e-flat\")[0] as HTMLButtonElement;\n\n    console.log(this.state)\n    const link = 'http://127.0.0.1:8000/calendar/api/event/';\n    let data = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n  //body:\n /* but.onclick=function() {\n\nJSON.stringify({\n\n  \n         \"summary\": (document.getElementById('Subject')as HTMLInputElement).value,\n          \"location\": (document.getElementById('Location')as HTMLInputElement).value,\n           \"description\": (document.getElementById('Description')as HTMLInputElement).value,\n        \"start\": (document.getElementById('StartTime')as HTMLInputElement).value ,\n          \"end\": (document.getElementById('EndTime')as HTMLInputElement).value\n\n          \n  \n        }) \n        }  */\n\n/* \n    }\n    \n    fetch(link, data)\n    .then(response => response.json())  // promise\n    .then(response => {\n        this.setState({event: response});\n        console.log(response)\n\n    })\n  }\n\n\n \n\n\n\n\n\n\n\n  private remoteData = new DataManager({\n    url:'http://localhost:8000/calendar/api/event/',\n    adaptor: new ODataV4Adaptor,\n    crossDomain: true\n\n\n\n\n\n  });\n\n  \n  public render(){\n   \n\n\n    return <ScheduleComponent currentView='Month'>\n      eventSettings={{dataSource:this.remoteData}}\n      <Inject services={[Day, Week,Month,Agenda]}/>\n    </ScheduleComponent>\n  }\n} */\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, Day, Week, Month, Agenda } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteData = new DataManager({\n      url: 'https://js.syncfusion.com/demos/ejservices/api/Schedule/LoadData',\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n    this.state = {\n      Title: \"\",\n      Location: \"\",\n      Description: \"\",\n      Start: \"\",\n      End: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.postEvent();\n  }\n\n  postEvent() {\n    console.log(this.state);\n    const link = 'http://127.0.0.1:8000/calendar/api/event/';\n    let data = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      } //body:JSON.stringify({\n      //      \"summary\": document.getElementById(\"Subject\"),\n      //       \"location\": \"test\",\n      //      \"description\": \"test\",\n      //     \"start\": ,\n      //    \"end\": \n      //  })\n\n    };\n    fetch(link, data).then(response => response.json()) // promise\n    .then(response => {\n      this.setState({\n        event: response\n      });\n      console.log(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/josh/Desktop/React/Scheduler/src/App.tsx"],"names":["React","Component","Inject","ScheduleComponent","Day","Week","Month","Agenda","DataManager","WebApiAdaptor","App","constructor","props","remoteData","url","adaptor","crossDomain","state","Title","Location","Description","Start","End","componentDidMount","postEvent","console","log","link","data","method","headers","fetch","then","response","json","setState","event","render"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,iBAAhB,EAAmCC,GAAnC,EAAuCC,IAAvC,EAA4CC,KAA5C,EAAkDC,MAAlD,QAA+D,gCAA/D;AACA,SAAQC,WAAR,EAAoBC,aAApB,QAAwC,sBAAxC;AAKA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AACxCU,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AADqB,SAwDfC,UAxDe,GAwDF,IAAIL,WAAJ,CAAgB;AACnCM,MAAAA,GAAG,EAAC,kEAD+B;AAEnCC,MAAAA,OAAO,EAAE,IAAIN,aAAJ,EAF0B;AAGnCO,MAAAA,WAAW,EAAE;AAHsB,KAAhB,CAxDE;AAErB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,QAAQ,EAAC,EAFE;AAGXC,MAAAA,WAAW,EAAC,EAHD;AAIXC,MAAAA,KAAK,EAAC,EAJK;AAKXC,MAAAA,GAAG,EAAC;AALO,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,UAAMU,IAAI,GAAG,2CAAb;AACA,QAAIC,IAAI,GAAG;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFF,CAKf;AACG;AACA;AACE;AACA;AACC;AACA;;AAXS,KAAX;AAoBAC,IAAAA,KAAK,CAACJ,IAAD,EAAOC,IAAP,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACoC;AADpC,KAECF,IAFD,CAEMC,QAAQ,IAAI;AACd,WAAKE,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEH;AAAR,OAAd;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAEH,KAND;AAOD;;AAsBMI,EAAAA,MAAP,GAAe;AAIb,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACjC,GAAD,EAAMC,IAAN,EAAWC,KAAX,EAAiBC,MAAjB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAGD;;AA3EuC","sourcesContent":["/*\nimport React,{Component, ButtonHTMLAttributes} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, Day,Week,Month,Agenda} from '@syncfusion/ej2-react-schedule';\nimport {DataManager,WebApiAdaptor} from '@syncfusion/ej2-data'\nimport { Ajax } from '@syncfusion/ej2-base';\nimport * as ReactDOM from \"react-dom\";\nimport { start } from 'repl';\nimport {ODataV4Adaptor, Query } from '@syncfusion/ej2-data';\n\n\nexport default class App extends Component{\n  \n  constructor(props:any) {\n    \n    super(props);\n    \n    this.state = {\n      Title:\"\",\n      Location:\"\",\n      Description:\"\",\n      Start:\"\",\n      End:\"\",\n    }\n  }\n\n\n  componentDidMount() {\n    this.postEvent();\n  }\n\n  postEvent() {\n  //var but= document.getElementsByClassName(\"e-control e-btn e-lib e-primary e-event-save e-flat\")[0] as HTMLButtonElement;\n\n    console.log(this.state)\n    const link = 'http://127.0.0.1:8000/calendar/api/event/';\n    let data = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n  //body:\n /* but.onclick=function() {\n\nJSON.stringify({\n\n  \n         \"summary\": (document.getElementById('Subject')as HTMLInputElement).value,\n          \"location\": (document.getElementById('Location')as HTMLInputElement).value,\n           \"description\": (document.getElementById('Description')as HTMLInputElement).value,\n        \"start\": (document.getElementById('StartTime')as HTMLInputElement).value ,\n          \"end\": (document.getElementById('EndTime')as HTMLInputElement).value\n\n          \n  \n        }) \n        }  */\n      \n\n        \n          \n      \n    \n/* \n    }\n    \n    fetch(link, data)\n    .then(response => response.json())  // promise\n    .then(response => {\n        this.setState({event: response});\n        console.log(response)\n\n    })\n  }\n\n\n \n\n\n\n\n\n\n\n  private remoteData = new DataManager({\n    url:'http://localhost:8000/calendar/api/event/',\n    adaptor: new ODataV4Adaptor,\n    crossDomain: true\n\n\n\n\n\n  });\n\n  \n  public render(){\n   \n\n\n    return <ScheduleComponent currentView='Month'>\n      eventSettings={{dataSource:this.remoteData}}\n      <Inject services={[Day, Week,Month,Agenda]}/>\n    </ScheduleComponent>\n  }\n} */\n\n\n\nimport React,{Component} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, Day,Week,Month,Agenda} from '@syncfusion/ej2-react-schedule';\nimport {DataManager,WebApiAdaptor} from '@syncfusion/ej2-data'\nimport { Ajax } from '@syncfusion/ej2-base';\nimport * as ReactDOM from \"react-dom\";\nimport { start } from 'repl';\n\nexport default class App extends Component{\n  constructor(props:any) {\n    super(props);\n    this.state = {\n      Title:\"\",\n      Location:\"\",\n      Description:\"\",\n      Start:\"\",\n      End:\"\",\n    }\n  }\n\n  componentDidMount() {\n    this.postEvent();\n  }\n\n  postEvent() {\n    console.log(this.state)\n    const link = 'http://127.0.0.1:8000/calendar/api/event/';\n    let data = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n//body:JSON.stringify({\n   //      \"summary\": document.getElementById(\"Subject\"),\n   //       \"location\": \"test\",\n     //      \"description\": \"test\",\n     //     \"start\": ,\n      //    \"end\": \n      //  })\n\n        \n          \n      \n    \n\n    }\n    \n    fetch(link, data)\n    .then(response => response.json())  // promise\n    .then(response => {\n        this.setState({event: response});\n        console.log(response)\n\n    })\n  }\n\n\n \n\n\n\n\n\n\n\n  private remoteData = new DataManager({\n    url:'https://js.syncfusion.com/demos/ejservices/api/Schedule/LoadData',\n    adaptor: new WebApiAdaptor,\n    crossDomain: true\n\n\n\n\n\n  });\n  \n  public render(){\n   \n\n\n    return <ScheduleComponent currentView='Month'>\n      <Inject services={[Day, Week,Month,Agenda]}/>\n    </ScheduleComponent>\n  }\n}"]},"metadata":{},"sourceType":"module"}