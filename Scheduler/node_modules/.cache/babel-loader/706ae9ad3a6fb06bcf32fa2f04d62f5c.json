{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/React/Scheduler/src/App.tsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, Day, Week, Month, Agenda } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\nimport * as ReactDOM from \"react-dom\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarId = '5105trob9dasha31vuqek6qgp0@group.calendar.google.com';\n    this.publicKey = 'AIzaSyD76zjMDsL_jkenM5AAnNsORypS1Icuqxg';\n    this.dataManager = new DataManager({\n      url: 'https://www.googleapis.com/calendar/v3/calendars/' + this.calendarId + '/events?key=' + this.publicKey,\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n  }\n\n  onDataBinding(e) {\n    let items = e.result.items;\n    let scheduleData = [];\n\n    if (items.length > 0) {\n      for (let i = 0; i < items.length; i++) {\n        let event = items[i];\n        let when = event.start.dateTime;\n        let start = event.start.dateTime;\n        let end = event.end.dateTime;\n\n        if (!when) {\n          when = event.start.date;\n          start = event.start.date;\n          end = event.end.date;\n        }\n\n        scheduleData.push({\n          Id: event.id,\n          Subject: event.summary,\n          StartTime: new Date(start),\n          EndTime: new Date(end),\n          IsAllDay: !event.start.dateTime\n        });\n      }\n    }\n\n    e.result = scheduleData;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ScheduleComponent, {\n      ref: schedule => this.scheduleObj = schedule,\n      width: \"100%\",\n      height: \"550px\",\n      selectedDate: new Date(2018, 10, 14),\n      readonly: true,\n      eventSettings: {\n        dataSource: this.dataManager\n      },\n      dataBinding: this.onDataBinding.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }\n    }));\n  }\n\n}\n;\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }\n}), document.getElementById('schedule'));","map":{"version":3,"sources":["/Users/josh/Desktop/React/Scheduler/src/App.tsx"],"names":["React","Component","Inject","ScheduleComponent","Day","Week","Month","Agenda","DataManager","WebApiAdaptor","ReactDOM","App","constructor","props","calendarId","publicKey","dataManager","url","adaptor","crossDomain","onDataBinding","e","items","result","scheduleData","length","i","event","when","start","dateTime","end","date","push","Id","id","Subject","summary","StartTime","Date","EndTime","IsAllDay","render","schedule","scheduleObj","dataSource","bind","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAAoD,OAApD;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,iBAAhB,EAAmCC,GAAnC,EAAuCC,IAAvC,EAA4CC,KAA5C,EAAkDC,MAAlD,QAA+D,gCAA/D;AACA,SAAQC,WAAR,EAAoBC,aAApB,QAAwC,sBAAxC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AAKA,eAAe,MAAMC,GAAN,SAAkBV,SAAlB,CAA2B;AAExCW,EAAAA,WAAW,CAACC,KAAD,EAAY;AACrB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,sDAAlB;AACA,SAAKC,SAAL,GAAiB,yCAAjB;AACA,SAAKC,WAAL,GAAmB,IAAIR,WAAJ,CAAgB;AAC/BS,MAAAA,GAAG,EAAE,sDAAsD,KAAKH,UAA3D,GAAwE,cAAxE,GAAyF,KAAKC,SADpE;AAE/BG,MAAAA,OAAO,EAAE,IAAIT,aAAJ,EAFsB;AAG/BU,MAAAA,WAAW,EAAE;AAHkB,KAAhB,CAAnB;AAMD;;AAGHC,EAAAA,aAAa,CAACC,CAAD,EAAI;AACf,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,QAAIE,YAAY,GAAG,EAAnB;;AACA,QAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AAClB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACG,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC,YAAIC,KAAK,GAAGL,KAAK,CAACI,CAAD,CAAjB;AACA,YAAIE,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAvB;AACA,YAAID,KAAK,GAAGF,KAAK,CAACE,KAAN,CAAYC,QAAxB;AACA,YAAIC,GAAG,GAAGJ,KAAK,CAACI,GAAN,CAAUD,QAApB;;AACA,YAAI,CAACF,IAAL,EAAW;AACPA,UAAAA,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYG,IAAnB;AACAH,UAAAA,KAAK,GAAGF,KAAK,CAACE,KAAN,CAAYG,IAApB;AACAD,UAAAA,GAAG,GAAGJ,KAAK,CAACI,GAAN,CAAUC,IAAhB;AACH;;AACDR,QAAAA,YAAY,CAACS,IAAb,CAAkB;AACdC,UAAAA,EAAE,EAAEP,KAAK,CAACQ,EADI;AAEdC,UAAAA,OAAO,EAAET,KAAK,CAACU,OAFD;AAGdC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASV,KAAT,CAHG;AAIdW,UAAAA,OAAO,EAAE,IAAID,IAAJ,CAASR,GAAT,CAJK;AAKdU,UAAAA,QAAQ,EAAE,CAACd,KAAK,CAACE,KAAN,CAAYC;AALT,SAAlB;AAOH;AACJ;;AACDT,IAAAA,CAAC,CAACE,MAAF,GAAWC,YAAX;AACD;;AACDkB,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEC,QAAQ,IAAI,KAAKC,WAAL,GAAmBD,QAAvD;AAAiE,MAAA,KAAK,EAAC,MAAvE;AAA8E,MAAA,MAAM,EAAC,OAArF;AAA6F,MAAA,YAAY,EAAE,IAAIJ,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAA3G;AAAmI,MAAA,QAAQ,EAAE,IAA7I;AAAmJ,MAAA,aAAa,EAAE;AAAEM,QAAAA,UAAU,EAAE,KAAK7B;AAAnB,OAAlK;AAAoM,MAAA,WAAW,EAAE,KAAKI,aAAL,CAAmB0B,IAAnB,CAAwB,IAAxB,CAAjN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACT,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC1C,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmBC,MAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAP;AAGD;;AA5CyC;AA8C1C;AACAG,QAAQ,CAACgC,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBK,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAzB","sourcesContent":["import React,{Component, ButtonHTMLAttributes} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, Day,Week,Month,Agenda} from '@syncfusion/ej2-react-schedule';\nimport {DataManager,WebApiAdaptor} from '@syncfusion/ej2-data'\nimport { Ajax } from '@syncfusion/ej2-base';\nimport * as ReactDOM from \"react-dom\";\nimport { start } from 'repl';\nimport {ODataV4Adaptor, Query } from '@syncfusion/ej2-data';\n\n\nexport default class App extends Component{\n  \n  constructor(props:any) {\n    super(props);\n    this.calendarId = '5105trob9dasha31vuqek6qgp0@group.calendar.google.com';\n    this.publicKey = 'AIzaSyD76zjMDsL_jkenM5AAnNsORypS1Icuqxg';\n    this.dataManager = new DataManager({\n        url: 'https://www.googleapis.com/calendar/v3/calendars/' + this.calendarId + '/events?key=' + this.publicKey,\n        adaptor: new WebApiAdaptor,\n        crossDomain: true\n    });\n\n  }\n\n\nonDataBinding(e) {\n  let items = e.result.items;\n  let scheduleData = [];\n  if (items.length > 0) {\n      for (let i = 0; i < items.length; i++) {\n          let event = items[i];\n          let when = event.start.dateTime;\n          let start = event.start.dateTime;\n          let end = event.end.dateTime;\n          if (!when) {\n              when = event.start.date;\n              start = event.start.date;\n              end = event.end.date;\n          }\n          scheduleData.push({\n              Id: event.id,\n              Subject: event.summary,\n              StartTime: new Date(start),\n              EndTime: new Date(end),\n              IsAllDay: !event.start.dateTime\n          });\n      }\n  }\n  e.result = scheduleData;\n}\nrender() {\n  return <ScheduleComponent ref={schedule => this.scheduleObj = schedule} width='100%' height='550px' selectedDate={new Date(2018, 10, 14)} readonly={true} eventSettings={{ dataSource: this.dataManager }} dataBinding={this.onDataBinding.bind(this)}>\n<Inject services={[Day, Week, Month, Agenda]}/>\n</ScheduleComponent>;\n}\n}\n;\nReactDOM.render(<App />, document.getElementById('schedule'));"]},"metadata":{},"sourceType":"module"}